@import '../settings';
@import '../colours';
@import '../common/z-index';
@import '../mixins';

.dropdown-container {
  position: relative;
  display: inline-block;

  button {
    white-space: nowrap;
    margin: 0 0 1rem 0;
  }
}

.hover {
  color: $colour-yankees-blue;
  border: none;
  background: $colour-platinum;
}

.dropdown-menu {
  --main-button-color: black;

  input {
    margin: 0;
  }

  @include box-shadow();
  display: none;
  overflow-y: auto;
  white-space: nowrap;
  position: absolute;
  background: #fff;
  z-index: $z-index-high;

  .dropdown-menu__content {
    padding: 1rem;
  }

  .dropdown-menu__panel {
    overflow-y: auto;
  }

  ul {
    display: block;
    list-style: none;
    margin: 0;
    padding: 0;

    // overflow-y: hidden;
    // height: auto !important;
    li {
      float: none !important;
      display: block;
      line-height: 1.6rem;
      background-color: $white !important;

      button,
      a {
        &,
        &.primary,
        &.secondary,
        &.tertiary {
          cursor: pointer;
          line-height: 1.6rem;
          width: 100%;
          text-align: left;
          font-weight: normal;
          padding: 0.5rem !important; // These two !important's are required to ensure the BLAST button is ...
          margin: 0 !important; // styled in the same way as the <a> tags in the Sequence component
          position: relative;
          display: block;
          border: none;
          padding-right: 1rem;
          text-decoration: none;
          white-space: nowrap;

          &:hover {
            @extend .hover;
          }

          &.active {
            font-weight: bold;
          }
        }
      }
    }
  }

  // The autocomplete has a dropdown-menu inside a dropdown-menu
  // so needs to have position set to relative so its width can
  // follow its container's
  .dropdown-menu {
    position: relative;
    top: 0;
  }
}

.dropdown-menu-open {
  display: block;
  animation: 200ms reveal;
}

@keyframes reveal {
  from {
    clip-path: circle(0% at 50% 0%);
  }
  to {
    clip-path: circle(100% at 50% 0%);
  }
}
